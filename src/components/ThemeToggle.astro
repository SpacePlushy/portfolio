---
import { Button } from "@/components/ui/button";
---

<Button
  id="theme-toggle"
  variant="ghost"
  size="icon"
  aria-label="Toggle red theme"
  className="relative"
  client:load
>
  <svg
    class="light-flame-icon absolute h-5 w-5 transition-all opacity-100 scale-100 dark-red:opacity-0 dark-red:scale-0"
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/>
  </svg>
  <svg
    class="dark-flame-icon absolute h-5 w-5 opacity-0 scale-0 transition-all dark-red:opacity-100 dark-red:scale-100"
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="currentColor"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"/>
  </svg>
</Button>

<script>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      const savedTheme = localStorage.getItem('theme');
      // Migrate old themes to new red theme system
      if (savedTheme === 'light' || savedTheme === 'dark' || savedTheme === 'red') {
        return 'light-red';
      }
      return savedTheme;
    }
    // Default to light red theme since we only have red themes now
    return 'light-red';
  })();

  // Apply the theme immediately
  const applyTheme = (themeName) => {
    const element = document.documentElement;
    element.classList.remove('light-red', 'dark-red');
    if (themeName === 'dark-red') {
      element.classList.add('dark-red');
    } else {
      element.classList.add('light-red');
    }
  };

  applyTheme(theme);
  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    const currentTheme = localStorage.getItem('theme') || 'light-red';
    
    // Toggle between light-red and dark-red
    const newTheme = currentTheme === 'light-red' ? 'dark-red' : 'light-red';
    
    applyTheme(newTheme);
    localStorage.setItem('theme', newTheme);
  };

  document.getElementById('theme-toggle')?.addEventListener('click', handleToggleClick);

  document.addEventListener('astro:after-swap', () => {
    const savedTheme = localStorage.getItem('theme') || 'light-red';
    applyTheme(savedTheme);
    document.getElementById('theme-toggle')?.addEventListener('click', handleToggleClick);
  });
</script>