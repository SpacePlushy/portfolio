# =============================================================================
# IMAGE PROCESSING WORKER DOCKERFILE
# =============================================================================
# Background worker for processing image optimization jobs from Redis queue

# Build stage
FROM node:20-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    build-base \
    python3 \
    make \
    g++ \
    libc6-compat \
    vips-dev \
    && apk upgrade

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --include=dev

# Copy source code
COPY src/ ./src/
COPY deploy/services/image-worker/ ./
COPY tsconfig.json ./

# Build the worker service
RUN npm run build:image-worker

# Production stage
FROM node:20-alpine AS runtime

# Install runtime dependencies
RUN apk add --no-cache \
    vips \
    dumb-init \
    tini \
    && apk upgrade

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install production dependencies
RUN npm ci --production --no-optional && \
    npm cache clean --force

# Copy built application
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/src/services/ ./src/services/
COPY --from=builder --chown=nodejs:nodejs /app/src/workers/ ./src/workers/

# Create working directories
RUN mkdir -p /app/temp /app/logs && \
    chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Worker doesn't need HTTP health check, but we'll monitor Redis connectivity
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=3 \
    CMD node -e "require('./dist/health-check-worker.js')"

# Environment variables
ENV NODE_ENV=production
ENV WORKER_TYPE=image-processor
ENV TEMP_DIR=/app/temp
ENV LOG_DIR=/app/logs

# Use tini for signal handling
ENTRYPOINT ["tini", "--"]

# Start the worker process
CMD ["node", "dist/image-worker.js"]