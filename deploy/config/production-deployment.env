# =============================================================================
# PRODUCTION DEPLOYMENT ENVIRONMENT CONFIGURATION
# =============================================================================
# Environment variables for zero-downtime production deployment
# Source this file before running deployment scripts

# =============================================================================
# DIGITAL OCEAN CONFIGURATION
# =============================================================================

# App Platform Configuration
export DO_PRODUCTION_APP_ID="${DO_PRODUCTION_APP_ID:-}"
export DO_STAGING_APP_ID="${DO_STAGING_APP_ID:-}"
export PRODUCTION_URL="https://frankpalmisano.com"
export STAGING_URL="https://portfolio-staging.ondigitalocean.app"

# Container Registry
export REGISTRY="registry.digitalocean.com"
export REGISTRY_NAMESPACE="portfolio-images"
export IMAGE_NAME="portfolio-app"

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Timeout Settings (in seconds)
export DEPLOYMENT_TIMEOUT=1800      # 30 minutes
export HEALTH_CHECK_TIMEOUT=300     # 5 minutes
export ROLLBACK_TIMEOUT=600         # 10 minutes
export EMERGENCY_ROLLBACK_TIMEOUT=300  # 5 minutes for emergency

# Health Check Configuration
export HEALTH_CHECK_RETRIES=5
export HEALTH_CHECK_INTERVAL=10
export READINESS_CHECK_TIMEOUT=10
export LIVENESS_CHECK_TIMEOUT=15

# =============================================================================
# APPLICATION LIFECYCLE CONFIGURATION
# =============================================================================

# Startup Configuration
export STARTUP_TIMEOUT_MS=120000           # 2 minutes
export DEPENDENCY_INIT_TIMEOUT_MS=60000    # 1 minute per dependency
export HEALTH_CHECK_STARTUP_DELAY_MS=5000  # 5 seconds before first check

# Shutdown Configuration
export GRACEFUL_SHUTDOWN_TIMEOUT_MS=15000  # 15 seconds
export CONNECTION_DRAIN_TIMEOUT_MS=10000   # 10 seconds
export FORCE_SHUTDOWN_TIMEOUT_MS=5000      # 5 seconds

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Monitoring Endpoints
export ENABLE_MONITORING=true
export ENABLE_PROMETHEUS_METRICS=true
export METRICS_PORT=9090
export ENABLE_REQUEST_LOGGING=true
export ENABLE_PERFORMANCE_TRACKING=true

# Performance Budgets
export MAX_RESPONSE_TIME_MS=5000
export MAX_STARTUP_TIME_MS=120000
export MIN_HEALTH_SCORE_PERCENT=95
export MAX_ERROR_RATE_PERCENT=1

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Core Features
export FEATURE_IMAGE_OPTIMIZATION_V2=true
export FEATURE_ENHANCED_CACHING=true
export FEATURE_PERFORMANCE_MONITORING=true
export FEATURE_GRACEFUL_SHUTDOWN=true

# Advanced Features (gradual rollout)
export FEATURE_ADVANCED_METRICS=true
export FEATURE_PREDICTIVE_SCALING=false
export FEATURE_A_B_TESTING=false

# Security Features
export FEATURE_ENHANCED_RATE_LIMITING=true
export FEATURE_BOT_PROTECTION=true
export FEATURE_SECURITY_HEADERS=true

# =============================================================================
# RESOURCE LIMITS
# =============================================================================

# Memory Configuration
export NODE_OPTIONS="--max-old-space-size=1536"
export SHARP_CACHE_SIZE=100
export SHARP_CONCURRENCY=2

# Performance Tuning
export UV_THREADPOOL_SIZE=8
export NODE_ENV=production
export LOG_LEVEL=info

# =============================================================================
# DEPLOYMENT VALIDATION
# =============================================================================

# Pre-deployment Checks
export ENABLE_SECURITY_SCAN=true
export ENABLE_PERFORMANCE_BUDGET_CHECK=true
export ENABLE_ACCESSIBILITY_CHECK=true
export ENABLE_BUILD_VALIDATION=true

# Post-deployment Validation
export ENABLE_SMOKE_TESTS=true
export ENABLE_PERFORMANCE_VALIDATION=true
export ENABLE_COMPREHENSIVE_HEALTH_CHECK=true

# Validation Thresholds
export MAX_BUNDLE_SIZE_MB=50
export MIN_PERFORMANCE_SCORE=80
export MAX_SECURITY_VULNERABILITIES=0

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Slack Integration
export SLACK_WEBHOOK_URL="${SLACK_WEBHOOK_URL:-}"
export SLACK_CHANNEL="#deployments"
export ENABLE_SLACK_NOTIFICATIONS=true

# Email Notifications
export NOTIFICATION_EMAIL="${NOTIFICATION_EMAIL:-}"
export ENABLE_EMAIL_NOTIFICATIONS=true

# PagerDuty Integration (for critical alerts)
export PAGERDUTY_INTEGRATION_KEY="${PAGERDUTY_INTEGRATION_KEY:-}"
export ENABLE_PAGERDUTY_ALERTS=false

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================

# Backup Configuration
export BACKUP_RETENTION_DAYS=30
export MAX_BACKUP_FILES=10
export ENABLE_AUTOMATIC_BACKUP=true

# Recovery Configuration
export ENABLE_AUTOMATIC_ROLLBACK=true
export ROLLBACK_ON_HEALTH_CHECK_FAILURE=true
export ROLLBACK_ON_PERFORMANCE_DEGRADATION=true

# =============================================================================
# LOGGING AND DEBUGGING
# =============================================================================

# Log Configuration
export LOG_FORMAT=json
export LOG_TIMESTAMP=true
export LOG_REQUEST_ID=true
export LOG_PERFORMANCE_METRICS=true

# Debug Configuration (disable in production)
export DEBUG_MODE=false
export VERBOSE_LOGGING=false
export ENABLE_DEBUG_ENDPOINTS=false

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Rate Limiting
export RATE_LIMIT_WINDOW_MS=900000      # 15 minutes
export RATE_LIMIT_MAX_REQUESTS=1000     # per window
export RATE_LIMIT_SKIP_FAILED_REQUESTS=false

# Security Headers
export ENABLE_HSTS=true
export ENABLE_CSP=true
export ENABLE_FRAME_OPTIONS=true
export ENABLE_XSS_PROTECTION=true

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================

# Caching Configuration
export ENABLE_RESPONSE_CACHING=true
export CACHE_TTL_SECONDS=3600
export ENABLE_CDN_OPTIMIZATION=true

# Compression
export ENABLE_GZIP_COMPRESSION=true
export ENABLE_BROTLI_COMPRESSION=true
export COMPRESSION_LEVEL=6

# =============================================================================
# MIGRATION CONFIGURATION
# =============================================================================

# Migration Phase Control
export MIGRATION_PHASE="${MIGRATION_PHASE:-4}"  # 1-4, corresponds to migration phases
export ENABLE_MIGRATION_MODE=false
export MIGRATION_ROLLBACK_ENABLED=true

# Feature Rollout Control
export GRADUAL_ROLLOUT_ENABLED=true
export ROLLOUT_PERCENTAGE="${ROLLOUT_PERCENTAGE:-100}"  # 0-100

# =============================================================================
# VALIDATION FUNCTIONS
# =============================================================================

# Function to validate required environment variables
validate_deployment_env() {
    local required_vars=(
        "DO_PRODUCTION_APP_ID"
        "DIGITALOCEAN_ACCESS_TOKEN"
        "REGISTRY"
        "REGISTRY_NAMESPACE"
        "IMAGE_NAME"
    )
    
    local missing_vars=()
    
    for var in "${required_vars[@]}"; do
        if [[ -z "${!var:-}" ]]; then
            missing_vars+=("$var")
        fi
    done
    
    if [[ ${#missing_vars[@]} -gt 0 ]]; then
        echo "ERROR: Missing required environment variables:"
        printf "  - %s\n" "${missing_vars[@]}"
        echo "Please set these variables before running deployment scripts."
        return 1
    fi
    
    echo "âœ… All required environment variables are set"
    return 0
}

# Function to display deployment configuration summary
show_deployment_config() {
    echo "ðŸš€ Deployment Configuration Summary:"
    echo "  Environment: production"
    echo "  App ID: ${DO_PRODUCTION_APP_ID}"
    echo "  Registry: ${REGISTRY}/${REGISTRY_NAMESPACE}/${IMAGE_NAME}"
    echo "  Monitoring: ${ENABLE_MONITORING}"
    echo "  Feature Flags: ${FEATURE_IMAGE_OPTIMIZATION_V2}, ${FEATURE_ENHANCED_CACHING}"
    echo "  Migration Phase: ${MIGRATION_PHASE}"
    echo "  Rollout Percentage: ${ROLLOUT_PERCENTAGE}%"
    echo ""
}

# =============================================================================
# INITIALIZATION
# =============================================================================

# Export functions for use in deployment scripts
export -f validate_deployment_env
export -f show_deployment_config

# Validate configuration when sourced (optional)
if [[ "${VALIDATE_ON_SOURCE:-false}" == "true" ]]; then
    validate_deployment_env
    show_deployment_config
fi

echo "âœ… Production deployment environment configuration loaded"