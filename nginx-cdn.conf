# Nginx CDN Configuration
# This configuration can be used if you need to set up nginx as a reverse proxy
# or if you're using nginx for static file serving with CDN integration

# Upstream configuration for Digital Ocean App
upstream portfolio_app {
    server localhost:8080;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=200r/m;

# Map for setting cache control headers
map $sent_http_content_type $cache_control {
    # Static assets - long cache
    ~text/css                           "public, max-age=31536000, s-maxage=31536000, immutable";
    ~application/javascript             "public, max-age=31536000, s-maxage=31536000, immutable";
    ~application/json                   "no-cache, no-store, must-revalidate";
    
    # Images - moderate cache
    ~image/                            "public, max-age=86400, s-maxage=2592000, stale-while-revalidate=86400";
    
    # HTML - short cache
    ~text/html                         "public, max-age=300, s-maxage=86400, stale-while-revalidate=3600";
    
    # Default
    default                            "public, max-age=3600";
}

# Map for compression
map $http_accept_encoding $compression_suffix {
    ~br     .br;
    ~gzip   .gz;
    default "";
}

server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL Configuration
    ssl_certificate /path/to/your/certificate.pem;
    ssl_certificate_key /path/to/your/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Brotli compression
    brotli on;
    brotli_comp_level 6;
    brotli_types
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Root directory
    root /var/www/portfolio/dist/client;
    index index.html;
    
    # Rate limiting for API endpoints
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        limit_req_status 429;
        
        # Proxy to Node.js app
        proxy_pass http://portfolio_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # No caching for API
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    # Health check endpoint
    location = /api/health {
        limit_req zone=general burst=50 nodelay;
        proxy_pass http://portfolio_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        add_header Cache-Control "public, max-age=60" always;
    }
    
    # Static assets with long cache
    location ~* \.(css|js|mjs|map)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable";
        add_header Vary "Accept-Encoding";
        
        # Try pre-compressed files first
        location ~* \.(css|js)$ {
            try_files $uri$compression_suffix $uri =404;
        }
        
        # CORS for fonts served from CDN
        if ($request_filename ~ \.(woff|woff2|ttf|eot|otf)$) {
            add_header Access-Control-Allow-Origin "*";
        }
    }
    
    # Font files with CORS
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable, crossorigin";
        add_header Access-Control-Allow-Origin "*";
        add_header Vary "Accept-Encoding";
    }
    
    # Images with moderate cache
    location ~* \.(png|jpg|jpeg|gif|webp|avif|svg|ico)$ {
        expires 30d;
        add_header Cache-Control "public, max-age=86400, s-maxage=2592000, stale-while-revalidate=86400";
        add_header Vary "Accept, Accept-Encoding";
        
        # WebP conversion for supported browsers
        location ~* \.(png|jpg|jpeg)$ {
            set $webp_suffix "";
            if ($http_accept ~* "image/webp") {
                set $webp_suffix ".webp";
            }
            try_files $uri$webp_suffix $uri =404;
        }
    }
    
    # HTML files and pages
    location ~* \.(html)$ {
        expires 5m;
        add_header Cache-Control "public, max-age=300, s-maxage=86400, stale-while-revalidate=3600";
        add_header Vary "Accept-Encoding, Accept-Language, Accept";
    }
    
    # Manifest and service worker
    location ~* \/(manifest\.json|sw\.js|service-worker\.js)$ {
        expires 5m;
        add_header Cache-Control "public, max-age=300, must-revalidate";
    }
    
    # Sitemap and robots
    location ~* \/(sitemap\.xml|robots\.txt)$ {
        expires 1h;
        add_header Cache-Control "public, max-age=3600, s-maxage=86400";
    }
    
    # Default location for SSR pages
    location / {
        limit_req zone=general burst=50 nodelay;
        
        # Try static files first, then proxy to app
        try_files $uri $uri/ @proxy;
        
        expires 5m;
        add_header Cache-Control "public, max-age=300, s-maxage=86400, stale-while-revalidate=3600";
        add_header Vary "Accept-Encoding, Accept-Language, Accept";
    }
    
    # Proxy fallback for SSR
    location @proxy {
        proxy_pass http://portfolio_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
    }
    
    location ~ \.(env|config|log)$ {
        deny all;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/html;
    }
}